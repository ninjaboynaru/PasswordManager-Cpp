
Encryption and Decryption
--------------------------
Currently none


MasterPassword
-------------------
- The sha256 hash is used to hash the master password. It produces a 64 character output wich is put at the begining of the data file.

- GetLoginData() skips over the first 64 characters so they do not touch 
	the hash of the master password. If the data file is less than 64 characters then methods such EncryptDataFile(), 
	GetLoginData() will not work and will return early.

- Since SaveLoginData() completely deletes/truncs the existing data file before writng to it so it first 
	reads the master password from the data file and stores it in a string. Then it writes the master password to the 
	new data file along with the other data.

- If no data file exists when SaveLoginData() is called. Then a data file will be created with no master password
	and any attempts by the Password Manager will fail and may result in a crash/error. This should only really happen if the file is manauly deleted. 
	SetInitialPassword(char* newMasterPassword) is called during program startup and will create a new data file with a new master password.
	This should assure that SaveLoginData() is not called without a data file already existing.


Button Window Procedures
------------------------
- The procedure/proc of a window/button can be changed with "SetWindowLong(handleToWindow, GWL_WNDPROC, (LONG)TheNewProcedure);"
	This function returns the old procedure of the window/button.

- The old window/button procedure should be stored as a WNDPROC to be used later. The old procedure should be called inside the new procedure after
	the new procedure is done doing its thing.
	
	(The new procedure you assign to the button will most likely not cover the full range of events that a button encounters such as
	change color when clicked etc.. Thus, you should call the old procedure after the new one does its thing so the old one can handle the events
	the new one does not)
	
	return CallWindowProc(originalButtonProc, handle, message, paramW, paramL);

